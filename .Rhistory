pull(risk) |>
quantile(c(.1, .9))
lim_N100_N26_prod
boxplot_N100_M26_prod <- result_long |>
filter(dgp == "prod", N == 100, M == 26) |>
ggplot(aes(x = as.factor(sigma), y = risk,
fill = as.factor(alpha))) +
geom_boxplot(outlier.shape = NA) +
scale_y_continuous(limits = quantile(lim_N100_N26_prod, c(0.1, 0.9))) +
ggtitle("Boxplots $f_1 = B_1 * B2 (N = 100, M = 26)$") +
xlab("$\\sigma$") +
ylab("$\\mathcal{R}_{\\alpha}$") +
labs(fill = "$\\alpha$") +
theme_minimal() +
scale_fill_grey(start = 0.3, end = 1)
boxplot_N100_M26_prod
lim_N100_N26_prod <- filter(result_long,
dgp == "prod",
N == 100,
M == 26) |>
pull(risk) |>
quantile(c(.05, .95))
lim_N100_N26_prod
lim_N100_N26_prod <- filter(result_long,
dgp == "prod",
N == 100,
M == 26) |>
pull(risk) |>
quantile(c(.1, .9))
lim_N100_N26_prod
boxplot_N100_M26_prod <- result_long |>
ggplot(aes(x = as.factor(sigma), y = risk,
fill = as.factor(alpha))) +
geom_boxplot(outlier.shape = NA) +
scale_y_continuous(limits = quantile(lim_N100_N26_prod, c(0.1, 0.9))) +
ggtitle("Boxplots $f_1 = B_1 * B2 (N = 100, M = 26)$") +
xlab("$\\sigma$") +
ylab("$\\mathcal{R}_{\\alpha}$") +
labs(fill = "$\\alpha$") +
theme_minimal() +
scale_fill_grey(start = 0.3, end = 1)
boxplot_N100_M26_prod
library(direg)
library(foreach)
library(parallel)
library(tictoc)
library(snow)
library(ggplot2)
library(here)
# Parameter settings
Nset <- c(100, 200)
Mset <- c(26, 51)
H1 <- 0.8
H2 <- 0.5
rout <- 400
alpha_set <- c(pi/3, pi/6, 5*pi/6)
delta_c <- 0.25
sigma_set <- c(0, 0.01, 0.05, 0.1)
param_cart <- expand.grid(N = Nset,
M = Mset,
alpha = alpha_set,
sigma = sigma_set)
# Set seeds to ensure reproducibility
set.seed(123)
seeds <- sample.int(10000,
size = rout)
N = 200
M = 51
alpha_true = pi/4
sigma_true = 0
source("~/Library/CloudStorage/Dropbox/sunny_omar/direg/alpha_const.R", echo=TRUE)
# Generate sum of fBms
X_list_sum <- purrr::map(seq_len(N),
~fbm_sheet(
t_n = M,
e_n = M,
alpha = alpha_true,
H1 = H1,
H2 = H2,
type = "sum",
sigma = sigma_true)
)
# Check the variance of the simulated process
#image(Reduce('+', purrr::map(X_list, ~.x^2)) / length(X_list))
sheets_list_sum <- purrr::map(X_list_sum,
~list(t = xout,
X = .x))
image(Reduce('+', purrr::map(X_list, ~.x^2)) / length(X_list))
# Check the variance of the simulated process
#image(Reduce('+', purrr::map(X_list_sum, ~.x^2)) / length(X_list_sum))
sheets_list_sum <- purrr::map(X_list_sum,
~list(t = xout,
X = .x))
image(Reduce('+', purrr::map(X_list_sum, ~.x^2)) / length(X_list_sum))
sheets_list_prod <- purrr::map(X_list_prod,
~list(t = xout,
X = .x))
# Generate prod of fBms
X_list_prod <- purrr::map(seq_len(N),
~fbm_sheet(
t_n = M,
e_n = M,
alpha = alpha_true,
H1 = H1,
H2 = H2,
type = "prod",
sigma = sigma_true)
)
sheets_list_prod <- purrr::map(X_list_prod,
~list(t = xout,
X = .x))
image(Reduce('+', purrr::map(X_list_prod, ~.x^2)) / length(X_list_prod))
N
M
N = 200
M = 51
# Generate prod of fBms
X_list_prod <- purrr::map(seq_len(N),
~fbm_sheet(
t_n = M,
e_n = M,
alpha = alpha_true,
H1 = H1,
H2 = H2,
type = "prod",
sigma = sigma_true)
)
image(Reduce('+', purrr::map(X_list_prod, ~.x^2)) / length(X_list_prod))
image(Reduce('+', purrr::map(X_list_prod, ~.x^2)) / length(X_list_prod), main = "Variance of fBm Products")
image(Reduce('+', purrr::map(X_list_prod, ~.x^2)) / length(X_list_prod), main = "Variance of Anisotropic fBm")
image(Reduce('+', purrr::map(X_list_prod, ~.x^2)) / length(X_list_prod), main = "Variance of Anisotropic fBms")
plot(
image(Reduce('+', purrr::map(X_list_prod, ~.x^2)) /
length(X_list_prod),
main = "Variance of Anisotropic fBms")
)
tikz(file = "var_pi/4.tex", width = 5, height = 5,
standAlone = TRUE)
library(tikzDevice)
tikz(file = "var_pi/4.tex", width = 5, height = 5,
standAlone = TRUE)
tikz(file = "var_pi4.tex", width = 5, height = 5,
standAlone = TRUE)
image(Reduce('+', purrr::map(X_list_prod, ~.x^2)) /
length(X_list_prod),
main = "Variance of Anisotropic fBms")
dev.off()
tikz(file = "var_pi4.tex", width = 5, height = 5,
standAlone = TRUE)
image(Reduce('+', purrr::map(X_list_prod, ~.x^2)) /
length(X_list_prod),
main = "Variance of Anisotropic process",
xlab = "t1",
ylab = "t2")
dev.off()
tikz(file = "var_pi4.tex", width = 5, height = 5,
standAlone = TRUE)
image(Reduce('+', purrr::map(X_list_prod, ~.x^2)) /
length(X_list_prod),
main = "Variance of Anisotropic process",
xlab = "t1",
ylab = "t2")
dev.off()
tikz(file = "var_pi4.tex", width = 5, height = 5,
standAlone = TRUE)
image(Reduce('+', purrr::map(X_list_prod, ~.x^2)) /
length(X_list_prod),
main = "Variance of Anisotropic process",
xlab = "t1",
ylab = "t2")
dev.off()
library(direg)
library(foreach)
library(parallel)
library(tictoc)
library(snow)
library(ggplot2)
library(here)
# Parameter settings
Nset <- c(100, 200)
Mset <- c(26, 51)
H1 <- 0.8
H2 <- 0.5
rout <- 400
alpha_set <- c(pi/3, pi/6, 5*pi/6)
delta_c <- 0.25
sigma_set <- c(0, 0.01, 0.05, 0.1)
param_cart <- expand.grid(N = Nset,
M = Mset,
alpha = alpha_set,
sigma = sigma_set)
N = 200
M = 51
fbm_sum <- function(H1, H2, n, endpoint) {
fbm_1 <- fbm_fft(H1, n, endpoint)
fbm_2 <- fbm_fft(H2, n, endpoint)
apply(expand.grid(fbm_1, fbm_2), 1, function(x) x[1] + x[2]) |>
matrix(nrow = n,
ncol = n)
}
X_iso = purrr::map(seq_len(200), ~fbm_sum(H1 = H1, H2 = H2, n = 51, 1))
image(Reduce('+', purrr::map(X_iso, ~.x^2)) / length(X_iso))
X_iso = purrr::map(seq_len(200), ~fbm_sum(H1 = H1, H2 = H2, n = 101, 1))
image(Reduce('+', purrr::map(X_iso, ~.x^2)) / length(X_iso))
image(Reduce('+', purrr::map(X_iso, ~.x^2)) / length(X_iso), main = "Variance of isotropic process", xlab = "t1", ylab = "t2")
getwd()
tikz(file = "iso.tex", width = 5, height = 5,
standAlone = TRUE)
library(tikzDevice)
tikz(file = "iso.tex", width = 5, height = 5,
standAlone = TRUE)
image(Reduce('+', purrr::map(X_iso, ~.x^2)) / length(X_iso),
main = "Variance of isotropic process",
xlab = "t1", ylab = "t2")
dev.off()
X_iso = purrr::map(seq_len(200), ~fbm_sum(H1 = H1, H2 = H1, n = 101, 1))
image(Reduce('+', purrr::map(X_iso, ~.x^2)) / length(X_iso),
main = "Variance of isotropic process",
xlab = "t1", ylab = "t2")
H1
X_iso = purrr::map(seq_len(200), ~fbm_sum(H1 = H2, H2 = H2, n = 101, 1))
image(Reduce('+', purrr::map(X_iso, ~.x^2)) / length(X_iso),
main = "Variance of isotropic process",
xlab = "t1", ylab = "t2")
tikz(file = "iso.tex", width = 5, height = 5,
standAlone = TRUE)
image(Reduce('+', purrr::map(X_iso, ~.x^2)) / length(X_iso),
main = "Variance of isotropic process",
xlab = "t1", ylab = "t2")
dev.off()
boxplot_N100_M26_prod <- result_long |>
ggplot(aes(x = as.factor(sigma), y = risk,
fill = as.factor(alpha))) +
geom_boxplot(outlier.shape = NA) +
scale_y_continuous(limits = quantile(lim_N100_N26_prod, c(0.1, 0.9))) +
ggtitle("Boxplots $f_1 = B_1 * B2 (N = 100, M = 26)$") +
xlab("$\\sigma$") +
ylab("$\\mathcal{R}_{\\alpha}$") +
labs(fill = "$\\alpha$") +
theme_minimal() +
scale_fill_grey(start = 0.3, end = 1)
library(here)
folder_path <- here("result")
file_names <- list.files(path = folder_path, pattern = "\\.rds$",
full.names = TRUE)
dat_list <- lapply(file_names, function(x) readRDS(x))
names(dat_list) <- basename(file_names)
dat_list <- lapply(dat_list, function(dat) {
t(sapply(dat, function(x) x))
})
library(dplyr)
result_df <- bind_rows(
lapply(names(dat_list), function(name) {
mat <- dat_list[[name]]
name_parts <- unlist(strsplit(name, "_"))
data.frame(
N = as.integer(sub("N(\\d+).*", "\\1", name_parts[1])),
M = as.integer(sub("M(\\d+).*", "\\1", name_parts[2])),
alpha = as.numeric(sub("alpha([0-9.]+).*", "\\1", name_parts[3])),
sigma = as.numeric(sub("sigma([0-9.]+)\\.rds", "\\1", name_parts[4])),
mat
)
})
)
result_df$alpha_hat_sum <- unlist(result_df$alpha_hat_sum)
result_df$alpha_hat_prod <- unlist(result_df$alpha_hat_prod)
result_df$risk_sum <- unlist(result_df$risk_sum)
result_df$risk_prod <- unlist(result_df$risk_prod)
result_long <- result_df |>
pivot_longer(cols = c(alpha_hat_sum, alpha_hat_prod, risk_sum, risk_prod),
names_to = c(".value", "dgp"),
names_pattern = "(.+)_(.+)",
values_to = "value")
library(dplyr)
result_long <- result_df |>
pivot_longer(cols = c(alpha_hat_sum, alpha_hat_prod, risk_sum, risk_prod),
names_to = c(".value", "dgp"),
names_pattern = "(.+)_(.+)",
values_to = "value")
?pivot_longer
??pivot_longer
library(tidyr)
library(tidyr)
result_long <- result_df |>
pivot_longer(cols = c(alpha_hat_sum, alpha_hat_prod, risk_sum, risk_prod),
names_to = c(".value", "dgp"),
names_pattern = "(.+)_(.+)",
values_to = "value")
boxplot_N100_M26_sum <- result_long |>
filter(dgp == "sum", N == 100, M == 26) |>
ggplot(aes(x = as.factor(sigma), y = risk,
fill = as.factor(alpha))) +
geom_boxplot() +
ggtitle("Boxplots $f_1 = B_1 + B2 (N = 100, M = 26)$") +
xlab("$\\sigma$") +
ylab("$\\mathcal{R}_{\\alpha}$") +
labs(fill = "$\\alpha$") +
theme_minimal() +
scale_fill_grey(start = 0.3, end = 1)
lim_N100_N26_prod <- filter(result_long,
dgp == "prod",
N == 100,
M == 26) |>
pull(risk) |>
quantile(c(.1, .9))
boxplot_N100_M26_prod <- result_long |>
ggplot(aes(x = as.factor(sigma), y = risk,
fill = as.factor(alpha))) +
geom_boxplot(outlier.shape = NA) +
scale_y_continuous(limits = quantile(lim_N100_N26_prod, c(0.1, 0.9))) +
ggtitle("Boxplots $f_1 = B_1 * B2 (N = 100, M = 26)$") +
xlab("$\\sigma$") +
ylab("$\\mathcal{R}_{\\alpha}$") +
labs(fill = "$\\alpha$") +
theme_minimal() +
scale_fill_grey(start = 0.3, end = 1)
boxplot_N100_M26_prod
lim_N100_N51_prod <- filter(result_long,
dgp == "prod",
N == 100,
M == 51) |>
pull(risk) |>
quantile(c(.1, .9))
boxplot_N100_M51_prod <- result_long |>
filter(dgp == "prod", N == 100, M == 51) |>
ggplot(aes(x = as.factor(sigma), y = risk,
fill = as.factor(alpha))) +
geom_boxplot(outlier.shape = NA) +
scale_y_continuous(limits =
quantile(lim_N100_N26_prod, c(0.1, 0.9))) +
ggtitle("Boxplots $f_1 = B_1 * B2 (N = 100, M = 51)$") +
xlab("$\\sigma$") +
ylab("$\\mathcal{R}_{\\alpha}$") +
labs(fill = "$\\alpha$") +
theme_minimal() +
scale_fill_grey(start = 0.3, end = 1)
boxplot_N100_M51_prod
lim_N200_N51_prod <- filter(result_long,
dgp == "prod",
N == 200,
M == 51) |>
pull(risk) |>
quantile(c(.1, .9))
boxplot_N100_M51_prod <- result_long |>
filter(dgp == "prod", N == 100, M == 51) |>
ggplot(aes(x = as.factor(sigma), y = risk,
fill = as.factor(alpha))) +
geom_boxplot(outlier.shape = NA) +
scale_y_continuous(limits =
quantile(lim_N100_N51_prod c(0.1, 0.9))) +
boxplot_N100_M51_prod <- result_long |>
filter(dgp == "prod", N == 100, M == 51) |>
ggplot(aes(x = as.factor(sigma), y = risk,
fill = as.factor(alpha))) +
geom_boxplot(outlier.shape = NA) +
scale_y_continuous(limits =
quantile(lim_N100_N51_prod, c(0.1, 0.9))) +
ggtitle("Boxplots $f_1 = B_1 * B2 (N = 100, M = 51)$") +
xlab("$\\sigma$") +
ylab("$\\mathcal{R}_{\\alpha}$") +
labs(fill = "$\\alpha$") +
theme_minimal() +
scale_fill_grey(start = 0.3, end = 1)
boxplot_N100_M51_prod
lim_N100_N51_prod
lim_N100_N51_prod <- filter(result_long,
dgp == "prod",
N == 100,
M == 51) |>
pull(risk) |>
quantile(c(.2, .8))
lim_N100_N51_prod
lim_N100_N51_prod <- filter(result_long,
dgp == "prod",
N == 100,
M == 51) |>
pull(risk) |>
quantile(c(.15, .85))
lim_N100_N51_prod
lim_N100_N51_prod <- filter(result_long,
dgp == "prod",
N == 100,
M == 51) |>
pull(risk) |>
quantile(c(.175, .875))
lim_N100_N51_prod
lim_N100_N51_prod <- filter(result_long,
dgp == "prod",
N == 100,
M == 51) |>
pull(risk) |>
quantile(c(.15, .85))
lim_N100_N51_prod
boxplot_N100_M51_prod <- result_long |>
filter(dgp == "prod", N == 100, M == 51) |>
ggplot(aes(x = as.factor(sigma), y = risk,
fill = as.factor(alpha))) +
geom_boxplot(outlier.shape = NA) +
scale_y_continuous(limits = lim_N100_N51_prod) +
ggtitle("Boxplots $f_1 = B_1 * B2 (N = 100, M = 51)$") +
xlab("$\\sigma$") +
ylab("$\\mathcal{R}_{\\alpha}$") +
labs(fill = "$\\alpha$") +
theme_minimal() +
scale_fill_grey(start = 0.3, end = 1)
boxplot_N100_M51_prod
lim_N200_N51_prod <- filter(result_long,
dgp == "prod",
N == 200,
M == 51) |>
pull(risk) |>
quantile(c(.1, .9))
boxplot_N200_M51_prod <- result_long |>
filter(dgp == "prod", N == 200, M == 51) |>
ggplot(aes(x = as.factor(sigma), y = risk,
fill = as.factor(alpha))) +
geom_boxplot(outlier.shape = NA) +
scale_y_continuous(limits = lim_N200_N51_prod) +
ggtitle("Boxplots $f_1 = B_1 * B2 (N = 100, M = 51)$") +
xlab("$\\sigma$") +
ylab("$\\mathcal{R}_{\\alpha}$") +
labs(fill = "$\\alpha$") +
theme_minimal() +
scale_fill_grey(start = 0.3, end = 1)
boxplot_N200_M51_prod
lim_N200_N51_prod <- filter(result_long,
dgp == "prod",
N == 200,
M == 51) |>
pull(risk) |>
quantile(c(.15, .85))
boxplot_N200_M51_prod <- result_long |>
filter(dgp == "prod", N == 200, M == 51) |>
ggplot(aes(x = as.factor(sigma), y = risk,
fill = as.factor(alpha))) +
geom_boxplot(outlier.shape = NA) +
scale_y_continuous(limits = lim_N200_N51_prod) +
ggtitle("Boxplots $f_1 = B_1 * B2 (N = 100, M = 51)$") +
xlab("$\\sigma$") +
ylab("$\\mathcal{R}_{\\alpha}$") +
labs(fill = "$\\alpha$") +
theme_minimal() +
scale_fill_grey(start = 0.3, end = 1)
lim_N200_N51_prod
boxplot_N200_M51_prod
tikz(file = "N100_M51_sum.tex", width = 5, height = 5,
standAlone = TRUE)
plot(boxplot_N100_M51_prod)
dev.off()
tikz(file = "N200_M51_prod.tex", width = 5, height = 5,
standAlone = TRUE)
plot(boxplot_N200_M51_prod)
dev.off()
tikz(file = "N100_M51_sum.tex", width = 5, height = 5,
standAlone = TRUE)
plot(boxplot_N100_M51_sum)
boxplot_N100_M51_sum <- result_long |>
filter(dgp == "sum", N == 100, M == 51) |>
ggplot(aes(x = as.factor(sigma), y = risk,
fill = as.factor(alpha))) +
geom_boxplot() +
ggtitle("Boxplots $f_1 = B_1 + B2 (N = 100, M = 51)$") +
xlab("$\\sigma$") +
ylab("$\\mathcal{R}_{\\alpha}$") +
labs(fill = "$\\alpha$") +
theme_minimal() +
scale_fill_grey(start = 0.3, end = 1)
tikz(file = "N100_M51_sum.tex", width = 5, height = 5,
standAlone = TRUE)
plot(boxplot_N100_M51_sum)
dev.off()
boxplot_N100_M51_prod
tikz(file = "N100_M51_prod.tex", width = 5, height = 5,
standAlone = TRUE)
plot(boxplot_N100_M51_prod)
dev.off()
tikz(file = "N200_M51_prod.tex", width = 5, height = 5,
standAlone = TRUE)
plot(boxplot_N200_M51_prod)
dev.off()
pi/6
estimate_sigma
sample.int(10000,
size = rout)
folder_path <- here("result")
file_names <- list.files(path = folder_path, pattern = "\\.rds$",
full.names = TRUE)
dat_list <- lapply(file_names, function(x) readRDS(x))
names(dat_list) <- basename(file_names)
dat_list <- lapply(dat_list, function(dat) {
t(sapply(dat, function(x) x))
})
dat_list
dat_list$N100_M26_alpha0.52_sigma0.01.rds
result_long <- result_df |>
pivot_longer(cols = c(alpha_hat_sum, alpha_hat_prod, risk_sum, risk_prod),
names_to = c(".value", "dgp"),
names_pattern = "(.+)_(.+)",
values_to = "value")
result_long
boxplot_N100_M26_sum <- result_long |>
filter(dgp == "sum", N == 100, M == 26) |>
ggplot(aes(x = as.factor(sigma), y = risk,
fill = as.factor(alpha))) +
geom_boxplot() +
ggtitle("Boxplots $f_1 = B_1 + B2 (N = 100, M = 26)$") +
xlab("$\\sigma$") +
ylab("$\\mathcal{R}_{\\alpha}$") +
labs(fill = "$\\alpha$") +
theme_minimal() +
scale_fill_grey(start = 0.3, end = 1)
boxplot_N100_M26_sum
